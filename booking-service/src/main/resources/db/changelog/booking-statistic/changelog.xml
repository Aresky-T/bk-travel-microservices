<?xml version="1.0" encoding="UTF-8"?>
<databaseChangeLog
    xmlns="http://www.liquibase.org/xml/ns/dbchangelog"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:ext="http://www.liquibase.org/xml/ns/dbchangelog-ext"
    xmlns:pro="http://www.liquibase.org/xml/ns/pro"
    xsi:schemaLocation="http://www.liquibase.org/xml/ns/dbchangelog http://www.liquibase.org/xml/ns/dbchangelog/dbchangelog-4.26.xsd"
>
    <changeSet id="Create table booking_statistic" author="Aresky" runAlways="true">
        <preConditions onFail="CONTINUE" onFailMessage="Table booking_statistic already exist!">
            <not>
                <tableExists tableName="booking_statistic" />
            </not>
        </preConditions>
        <createTable tableName="booking_statistic" ifNotExists="true">
            <column name="sub_tour_id" type="INT">
                <constraints nullable="false" primaryKey="true" />
            </column>
            <column name="tour_id" type="INT">
                <constraints nullable="false" />
            </column>
            <column name="number_of_booking" type="INT" defaultValue="0">
                <constraints nullable="false"/>
            </column>
        </createTable>
        <sql>
            ALTER TABLE booking_statistic
            ADD CONSTRAINT ck_number_of_booking CHECK (number_of_booking >= 0);
        </sql>
    </changeSet>
    <changeSet id="Add trigger update_booking_statistic_after_insert_info_booking_info" author="Aresky" runAlways="true">
        <sql>
            DROP TRIGGER IF EXISTS update_booking_statistic_after_insert_info_booking;
        </sql>
        <sql endDelimiter="//">
            CREATE TRIGGER update_booking_statistic_after_insert_info_booking
            AFTER INSERT ON booking
            FOR EACH ROW
            BEGIN
                IF NEW.status = 'PAY_UP' THEN
                    INSERT INTO booking_statistic (tour_id, sub_tour_id, number_of_booking)
                    VALUES (NEW.tour_id, NEW.sub_tour_id, 1)
                    ON DUPLICATE KEY UPDATE
                        number_of_booking = number_of_booking + 1;
                END IF;
            END;
        </sql>
    </changeSet>
</databaseChangeLog>