version: "3.8"
services:
  mysql-server:
    image: mysql:8.3.0
    container_name: mysql-server
    ports:
      - 3306:3306
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_USER=aresky
      - MYSQL_PASSWORD=11052000
    volumes:
      - mysql-server-volume:/var/lib/mysql
      - mysql-spring-boot-config-daemon:/etc/mysql/conf.d
    networks:
      - bk-travel-ms-network
  discovery-server:
    image: discovery-server-image:v1.0.1
    container_name: discovery-server
    ports:
      - "8761:8761"
    build:
      context: ./discovery-server
      dockerfile: Dockerfile
    networks:
      - bk-travel-ms-network
  gateway-service:
    image: gateway-service-image:v1.0.1
    container_name: gateway-service
    ports:
      - "8080:8080"
    build:
      context: ./gateway-service
      dockerfile: Dockerfile
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
    networks:
      - bk-travel-ms-network
  auth-service:
    image: auth-service-image:v1.0.1
    container_name: auth-service
    depends_on:
      - mysql-server
    ports:
      - "8081:8081"
    build:
      context: ./auth-service
      dockerfile: Dockerfile
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_NAME: bk_travel_auth
      DB_USER: root
      DB_PASSWORD: root
      KAFKA_BROKER_HOST: kafka-broker-01
      KAFKA_BROKER_PORT: 19092
    networks:
      - bk-travel-ms-network
  account-service:
    image: account-service-image:v1.0.1
    container_name: account-service
    depends_on:
      - mysql-server
    ports:
      - "8082:8082"
    build:
      context: ./account-service
      dockerfile: Dockerfile
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_NAME: bk_travel_account
      DB_USER: root
      DB_PASSWORD: root
    networks:
      - bk-travel-ms-network
  tour-service:
    image: tour-service-image:v1.0.1
    container_name: tour-service
    ports:
      - "8083:8083"
    depends_on:
      - mysql-server
    build:
      context: ./tour-service
      dockerfile: Dockerfile
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_NAME: bk_travel_tour
      DB_USER: root
      DB_PASSWORD: root
      KAFKA_BROKER_HOST: kafka-broker-01
      KAFKA_BROKER_PORT: 19092
    networks:
      - bk-travel-ms-network
  booking-service:
    image: booking-service-image:v1.0.1
    container_name: booking-service
    ports:
      - "8084:8084"
    depends_on:
      - mysql-server
    build:
      context: ./booking-service
      dockerfile: Dockerfile
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_NAME: bk_travel_booking
      DB_USER: root
      DB_PASSWORD: root
      KAFKA_BROKER_HOST: kafka-broker-01
      KAFKA_BROKER_PORT: 19092
    networks:
      - bk-travel-ms-network
  staff-service:
    image: staff-service-image:v1.0.1
    container_name: staff-service
    ports:
      - "8085:8085"
    depends_on:
      - mysql-server
    build:
      context: ./staff-service
      dockerfile: Dockerfile
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_NAME: bk_travel_staff
      DB_USER: root
      DB_PASSWORD: root
    networks:
      - bk-travel-ms-network
  payment-service:
    image: payment-service-image:v1.0.1
    container_name: payment-service
    depends_on:
      - mysql-server
    ports:
      - "8090:8090"
    build:
      context: ./payment-service
      dockerfile: Dockerfile
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_NAME: bk_travel_payment
      DB_USER: root
      DB_PASSWORD: root
      KAFKA_BROKER_HOST: kafka-broker-01
      KAFKA_BROKER_PORT: 19092
    networks:
      - bk-travel-ms-network
  tourist-attraction-service:
    image: tourist-attraction-service-image:v1.0.1
    container_name: tourist-attraction-service
    depends_on:
      - mysql-server
    ports:
      - "8086:8086"
    build:
      context: ./tourist-attraction-service
      dockerfile: Dockerfile
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_NAME: bk_travel_tourist_attraction
      DB_USER: root
      DB_PASSWORD: root
    networks:
      - bk-travel-ms-network
  chat-service:
    container_name: chat-service
    image: chat-service-image:v1.0.1
    ports:
      - "8087:8087"
    depends_on:
      - mysql-server
    build:
      context: ./chat-service
      dockerfile: Dockerfile
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_NAME: bk_travel_chat
      DB_USER: root
      DB_PASSWORD: root
    networks:
      - bk-travel-ms-network
  mail-service:
    container_name: mail-service
    image: mail-service-image:v1.0.1
    ports:
      - "8088:8088"
    depends_on:
      - mysql-server
    build:
      context: ./mail-service
      dockerfile: Dockerfile
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_NAME: bk_travel_mail
      DB_USER: root
      DB_PASSWORD: root
    networks:
      - bk-travel-ms-network
  review-service:
    image: review-service-image:v1.0.1
    container_name: review-service
    ports:
      - "8089:8089"
    depends_on:
      - mysql-server
    build:
      context: ./review-service
      dockerfile: Dockerfile
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_NAME: bk_travel_review
      DB_USER: root
      DB_PASSWORD: root
    networks:
      - bk-travel-ms-network
  marking-service:
    image: marking-service-image:v1.0.1
    container_name: marking-service
    ports:
      - "8091:8091"
    depends_on:
      - mysql-server
    build:
      context: ./marking-service
      dockerfile: Dockerfile
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_NAME: bk_travel_marking
      DB_USER: root
      DB_PASSWORD: root
    networks:
      - bk-travel-ms-network
  notification-service:
    image: notification-service-image:v1.0.1
    container_name: notification-service
    ports:
      - "8100:8100"
    depends_on:
      - mysql-server
    build:
      dockerfile: Dockerfile
      context: ./notification-service
    environment:
      SERVICE_REGISTRY_HOST: discovery-server
      SERVICE_REGISTRY_PORT: 8761
      DB_HOST: mysql-server
      DB_PORT: 3306
      DB_NAME: bk_travel_notification
      DB_USER: root
      DB_PASSWORD: root
      KAFKA_BROKER_HOST: kafka-broker-01
      KAFKA_BROKER_PORT: 19092
    networks:
      - bk-travel-ms-network
volumes:
  mysql-server-volume:
    name: mysql-server-volume
  mysql-spring-boot-config-daemon:
    name: mysql-spring-boot-config-daemon

networks:
  bk-travel-ms-network:
    name: bk-travel-ms-network
    driver: bridge
    external: true
